{% extends 'base.html.twig' %}

{% block title %}My Unit{% endblock %}

{% block body %}
    <style>

        .panel {
            list-style: none;
            color: #f4e1c1; /* Couleur dor√©e pour le texte */
            text-align: center;
        }

        .panel li, li h1 {
            margin-bottom: 10px;
        }

        h1 {
            text-transform: uppercase;
            font-family: 'Cinzel', serif;
            font-size: 2rem;
            font-weight: bold;
        }

        .profile-container {
            margin-left: 10%;
            margin-right: 10%;
            height: 100vh; /* Hauteur de la page pour un centrage vertical parfait */
            display: flex;
            justify-content: center; /* Centre horizontalement */
            align-items: center; /* Centre verticalement */
            background-color: #2e2a47; /* Optionnel : couleur d'arri√®re-plan */
        }
        .image-grid {
            display: grid;
            grid-template-columns: repeat(10, 1fr);
            gap: 10px;
            margin: 0 auto;
        }
        .image-grid input[type="image"], #my-unit-current-avatar {
            width: 100px;
            height: 100px;
            object-fit: cover;
            border-radius: 50%;
            border: 2px solid #d4af37;
            transition: transform 0.3s ease-in-out;
        }

        .image-grid input[type="image"]:hover {
            transform: scale(1.1);
        }

        .selected {
            border: 4px solid #d4af37;
            background-color: #d8bf6b;
        }
    </style>
<meta name="csrf-token-profile" content="{{ csrf_token('profile') }}">
<div class="page-container">
    <input id="hidden-user-avatar" hidden value="{{ user.avatar }}">
    <input id="hidden-user-id" hidden value="{{ user.id }}">
    <input id="hidden-user-gold" hidden value="{{ user.money|number_format(0, '.', ',') }}">
    <div class="profile-container">
        <ul class="panel">
            <li>
                <h1>My Unit</h1>
                <div class="image-grid">
                <!-- 20 image inputs -->
                    <input id="Blaiddyd_portrait.webp" type="image" src="/uploads/Blaiddyd_portrait.webp" alt="image1" onclick="sendImageName('Blaiddyd_portrait.webp', '{{ user.id }}')">
                    <input id="Chilon_portrait.webp" type="image" src="/uploads/Chilon_portrait.webp" alt="image2" onclick="sendImageName('Chilon_portrait.webp', '{{ user.id }}')">
                    <input id="Daphnel_portrait.webp" type="image" src="/uploads/Daphnel_portrait.webp" alt="image3" onclick="sendImageName('Daphnel_portrait.webp', '{{ user.id }}')">
                    <input id="Dominic_portrait.webp" type="image" src="/uploads/Dominic_portrait.webp" alt="image4" onclick="sendImageName('Dominic_portrait.webp', '{{ user.id }}')">
                    <input id="FE3HTrickster.webp" type="image" src="/uploads/FE3HTrickster.webp" alt="image5" onclick="sendImageName('FE3HTrickster.webp', '{{ user.id }}')">

                    <input id="FE16_generic_female_Bishop_Portrait.webp" type="image" src="/uploads/FE16_generic_female_Bishop_Portrait.webp" alt="image6" onclick="sendImageName('FE16_generic_female_Bishop_Portrait.webp', '{{ user.id }}')">
                    <input id="FE16_Generic_Female_Warlock_Portrait.webp" type="image" src="/uploads/FE16_Generic_Female_Warlock_Portrait.webp" alt="image7" onclick="sendImageName('FE16_Generic_Female_Warlock_Portrait.webp', '{{ user.id }}')">
                    <input id="FE16_generic_grappler_portrait.webp" type="image" src="/uploads/FE16_generic_grappler_portrait.webp" alt="image8" onclick="sendImageName('FE16_generic_grappler_portrait.webp', '{{ user.id }}')">
                    <input id="FE16_Generic_Male_Assassin.webp" type="image" src="/uploads/FE16_Generic_Male_Assassin.webp" alt="image9" onclick="sendImageName('FE16_Generic_Male_Assassin.webp', '{{ user.id }}')">
                    <input id="FE16_Generic_Male_Mercenary_Portrait.webp" type="image" src="/uploads/FE16_Generic_Male_Mercenary_Portrait.webp" alt="image10" onclick="sendImageName('FE16_Generic_Male_Mercenary_Portrait.webp', '{{ user.id }}')">

                    <input id="FE16_generic_male_Swordmaster_Portrait.webp" type="image" src="/uploads/FE16_generic_male_Swordmaster_Portrait.webp" alt="image11" onclick="sendImageName('FE16_generic_male_Swordmaster_Portrait.webp', '{{ user.id }}')">
                    <input id="FEW3H_Berling_Portrait.webp" type="image" src="/uploads/FEW3H_Berling_Portrait.webp" alt="image12" onclick="sendImageName('FEW3H_Berling_Portrait.webp', '{{ user.id }}')">
                    <input id="Fraldarius_portrait.webp" type="image" src="/uploads/Fraldarius_portrait.webp" alt="image13" onclick="sendImageName('Fraldarius_portrait.webp', '{{ user.id }}')">
                    <input id="Gloucester_portrait.webp" type="image" src="/uploads/Gloucester_portrait.webp" alt="image14" onclick="sendImageName('Gloucester_portrait.webp', '{{ user.id }}')">
                    <input id="Goneril_portrait.webp" type="image" src="/uploads/Goneril_portrait.webp" alt="image15" onclick="sendImageName('Goneril_portrait.webp', '{{ user.id }}')">

                    <input id="Gremory_portrait.webp" type="image" src="/uploads/Gremory_portrait.webp" alt="image16" onclick="sendImageName('Gremory_portrait.webp', '{{ user.id }}')">
                    <input id="Mortal_Savant_Charon_portrait.webp" type="image" src="/uploads/Mortal_Savant_Charon_portrait.webp" alt="image17" onclick="sendImageName('Mortal_Savant_Charon_portrait.webp', '{{ user.id }}')">
                    <input id="Myson_portrait.webp" type="image" src="/uploads/Myson_portrait.webp" alt="image18" onclick="sendImageName('Myson_portrait.webp', '{{ user.id }}')">
                    <input id="Odesse_Dark_Bishop_portrait.webp" type="image" src="/uploads/Odesse_Dark_Bishop_portrait.webp" alt="image19" onclick="sendImageName('Odesse_Dark_Bishop_portrait.webp'), '{{ user.id }}'">
                    <input id="Riegan_portrait.webp" type="image" src="/uploads/Riegan_portrait.webp" alt="image20" onclick="sendImageName('Riegan_portrait.webp'), '{{ user.id }}'">
                </div>
                <div class="current-path-container">
                    <h2 class="class-title">Current Class Path</h2>
                    <div class="promo-list">
                        {% for promoClass in promotableClasses %}
                        <div class="one-promo">
                            <button id="{{ promoClass.id }}"
                                class="promo-button {% if user.title.level == promoClass.level %}is-unit-class{% endif %}" 
                                data-price="{{ promoClass.price|number_format(0, '.', ',') }}"
                                data-title="{{ promoClass.name }}"
                                data-label="{{ promoClass.bonusLabel }}"
                                {% if 
                                    (user.title.level == 1 and promoClass.level == 3) or 
                                    (user.title.level == 2 and promoClass.level == 1) or
                                    (user.title.level == 3 and promoClass.level == 1) or
                                    (user.title.level == 3 and promoClass.level == 2) or
                                    (user.title.level == promoClass.level)
                                %}
                                    disabled
                                {% endif %}>
                                <img class="title-avatar" src="/uploads/{{ promoClass.avatar }}">{{ promoClass.name }}
                            </button>

                        </div>
                        {% endfor %}
                    </div>
                </div>

                <div class="change-class-container">
                    <h2 class="class-title">Change Class</h2>
                    <div class="change-list">
                        {% for changeClass in changeableClasses %}
                        <div class="one-change">
                            <button id="{{ changeClass.id }}" class="change-button"
                                data-price="{{ changeClass.price|number_format(0, '.', ',') }}"
                                data-title="{{ changeClass.name }}"
                                data-label="{{ changeClass.bonusLabel }}">
                                <img class="title-avatar" src="/uploads/{{ changeClass.avatar }}">{{ changeClass.name }}
                            </button>
                        </div>
                        {% endfor %}
                    </div>
                </div>
            </li>
        </ul>
    </div>
    
    <nav class="sidebar-menu">
        <ul>
            <li>Logged in as : <img class="user-icon" src="/uploads/{{ user.avatar }}"> {{ user.username }}</li>
            <li>
                <img class="leader-presentation" src="/uploads/{{ user.avatar }}">
                <p title="Gold">ü™ô {{ user.money|number_format(0, '.', ',') }}</p>
                <p title="Renown">‚ú® {{ user.renown|number_format(0, '.', ',') }}</p>
                <p title="{{ user.title.name | default('No class found')  }} : {{ user.title.bonusLabel | default('')}}">
                    Class : {{ user.title.name | default('None')  }}
                    {% if user.title is not null %}
                        {% if user.title.level == 1 %}
                        ‚≠ê
                        {% elseif user.title.level == 2 %}
                        ‚≠ê‚≠ê
                        {% elseif user.title.level == 3 %}
                        ‚≠ê‚≠ê‚≠ê
                        {% endif %}
                    {% endif %}
                </p>
            </li>
        </ul>
        <ul>
            <li><p>üõ†Ô∏è Miscellaneous</p></li>
            <li><a href="#">My Unit</a></li>
            <li><a href="#">My Faction : {{ user.faction.name }}</a></li>
            <li><a href="{{ path('app_leaderboard') }}">Leaderboard</a></li>
            <li><a href="{{ path('app_help') }}">How it works...</a></li>
            <li><a href="{{ path('app_menu') }}">‚Ü©Ô∏è Back to Map</a></li>
            <li><a href="{{ path('app_logout') }}">üö™Logout</a></li>
        </ul>
    </nav>
</div>
<div class="confirm-popup" id="confirm-popup">
    <h1 id="promote-to">Promote to <b id="class-name"></b> ?</h1>
    <p id="bonus-p">Bonus : <i id="class-label"></i></p>
    <p id="class-price-p">Price : ü™ô<b id="class-price"></b></p>
    <p id="user-balance-p">Balance : ü™ô<s><b id="user-balance"></b></s> ‚Üí ü™ô<b id="new-balance"></b></p>
    <button id="action" class="promote-button">PROMOTE!</button>
    <button id="cancelButton-p">CANCEL</button>
</div>

<script>

    var csrfTokenProfile = document.querySelector('meta[name="csrf-token-profile"]').getAttribute('content');
    var currentAvatar = document.getElementById("hidden-user-avatar");

    var highlight = document.getElementById(currentAvatar.value);
    var userId = document.getElementById("hidden-user-id").value;
    var confirmPopup = document.getElementById("confirm-popup");
    var className = document.getElementById("class-name");
    var classPrice = document.getElementById("class-price");
    var userBalance = document.getElementById("user-balance");
    var userBalanceP = document.getElementById("user-balance-p");
    var classLabel = document.getElementById("class-label");
    var newBalance = document.getElementById("new-balance");
    var cancelButton = document.getElementById("cancelButton-p");
    var userGoldValue = document.getElementById("hidden-user-gold").value;
    var promoteButton = document.getElementById("action");

    var params = new URLSearchParams(window.location.search);

    if (params.get('success') === '1') {
        // Afficher une alerte avec un message personnalis√©
        alert('Congratulations! You have now changed class.');
    } else if (params.get('success') === '0') {
        alert('Error : There was an error while attempting to change class.');
    }

    confirmPopup.classList.remove('visible');

    highlight.classList.add('selected');
    
    function sendImageName(imageName, unitId) {
        $.ajax({
            url: '/misc/update/avatar',
            method: 'POST',
            contentType: 'application/json',
            dataType: 'json',
            headers: {
                'X-CSRF-Token': csrfTokenProfile,
            },
            data: JSON.stringify({ imageName: imageName, unit: unitId }),
            success: function(response) {
                document.querySelectorAll(".selected").forEach(element => { element.classList.remove('selected') });
                document.getElementById(imageName).classList.add('selected');
            },
            error: function(xhr, status, error) {
                console.error('Error sending image name:', error);
            }
        });
    } 

    cancelButton.addEventListener('click', () => {
        className.innerHTML="";
        classPrice.innerHTML="";
        classLabel.innerHTML="";
        confirmPopup.classList.remove('visible');
    });

    promoteButton.addEventListener('click', () => {
        console.log("Trying to promote!");
        var currentUrl = new URL(window.location.href);
        var classId = currentUrl.searchParams.get('class');
        handlePromoButtonClick(classId, userId);
        console.log("Should have promoted!");
    });

    // Ajoute des onClick listeners aux boutons dans la section Current Class Path
    document.querySelectorAll('.promo-button').forEach(button => {
        button.addEventListener('click', () => {
            // R√©cup√®re l'ID du bouton
            var buttonId = button.id;
            var currentUrl = new URL(window.location.href);
            currentUrl.searchParams.set('class', buttonId);
            window.history.replaceState({}, '', currentUrl);
            var currentUser = document.getElementById("hidden-user-id").value;
            var dataPrice = button.dataset.price;
            var classTitle = button.dataset.title;
            var classLabel = button.dataset.label;
            userBalanceP.innerHTML="Balance : ü™ô<s><b id='user-balance'></b></s> ‚Üí ü™ô<b id='new-balance'></b>";

            confirmPopup.classList.add("visible");
            // Appelle une fonction sp√©cifique pour les boutons promotionnels
            displayPopup(currentUser, dataPrice, classTitle, classLabel);
        });
    });

    // Ajoute des onClick listeners aux boutons dans la section Change Class
    document.querySelectorAll('.change-button').forEach(button => {
        button.addEventListener('click', () => {
            // R√©cup√®re l'ID du bouton
            var buttonId = button.id;
            var currentUrl = new URL(window.location.href);
            currentUrl.searchParams.set('class', buttonId);
            window.history.replaceState({}, '', currentUrl);
            var currentUser = document.getElementById("hidden-user-id").value;
            var dataPrice = button.dataset.price;
            var classTitle = button.dataset.title;
            var classLabel = button.dataset.label;
            userBalanceP.innerHTML="Balance : ü™ô<s><b id='user-balance'></b></s> ‚Üí ü™ô<b id='new-balance'></b>";

            confirmPopup.classList.add("visible");
            // Appelle une fonction sp√©cifique pour les boutons de changement de classe
            displayPopup(currentUser, dataPrice, classTitle, classLabel);
        });
    });

    function displayPopup(userId, price, title, label) {
        
        var userBalance = document.getElementById("user-balance");
        var newBalance = document.getElementById("new-balance");
        className.innerHTML=title;
        classPrice.innerHTML=price;
        userBalance.innerHTML=userGoldValue;
        classLabel.innerHTML=label;
        
        if (parseInt(userGoldValue) >= parseInt(price)) {
            promoteButton.removeAttribute("hidden");
            let userGold = parseInt(userGoldValue.replace(/,/g, ''));
            let itemPrice = parseInt(price.replace(/,/g, ''));
            let newBalanceValue = userGold - itemPrice;
            newBalance.innerHTML=newBalanceValue.toLocaleString();
        } else {
            userBalance.innerHTML="";
            userBalanceP.innerHTML="Balance : ü™ô<b>" + userGoldValue + "</b><br><br><i>You do not have enough money to promote to this class.</i>";
            promoteButton.setAttribute("hidden", true);
            newBalance.innerHTML="";
            action.disabled = true;
        }
        
    }

    // Fonction appel√©e lorsqu'un bouton promo est cliqu√©
    function handlePromoButtonClick(classId, userId) {
        $.ajax({
            url: '/misc/update/class',
            method: 'POST',
            contentType: 'application/json',
            dataType: 'json',
            headers: {
                'X-CSRF-Token': csrfTokenProfile,
            },
            data: JSON.stringify({ class: classId, unit: userId }),
            success: function(response) {
                console.log(response);
                if (response['success'] == true) {
                    window.location.href = '/misc/profile?success=1';
                } else {
                    window.location.href = '/misc/profile?success=0';
                }
            },
            error: function(xhr, status, error) {
                console.error('Error when trying to update class:', error);
            }
        });
    }

</script>
{% endblock %}